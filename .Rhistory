mcHFplus(75,10,2,0.6,T,F)
mcHFplus(100,10,2,0.6,T,F)
mcHFplus(200,10,2,0.6,T,F)
mcHFplus(50,10,3,0.2,T,F)
mcHFplus(75,10,3,0.2,T,F)
mcHFplus(100,10,3,0.2,T,F)
mcHFplus(200,10,3,0.2,T,F)
mcHFplus(50,10,3,0.6,T,F)
mcHFplus(75,10,3,0.6,T,F)
mcHFplus(100,10,3,0.6,T,F)
mcHFplus(200,10,3,0.6,T,F)
setwd("~/MCStudy_1000/")
mcHFplus(50,10,2,0.2,T,F)
mcHFplus(75,10,2,0.2,T,F)
mcHFplus(100,10,2,0.2,T,F)
mcHFplus(200,10,2,0.2,T,F)
mcHFplus(50,10,2,0.6,T,F)
mcHFplus(75,10,2,0.6,T,F)
mcHFplus(100,10,2,0.6,T,F)
mcHFplus(200,10,2,0.6,T,F)
mcHFplus(50,10,3,0.2,T,F)
mcHFplus(75,10,3,0.2,T,F)
mcHFplus(100,10,3,0.2,T,F)
mcHFplus(200,10,3,0.2,T,F)
mcHFplus(50,10,3,0.6,T,F)
mcHFplus(75,10,3,0.6,T,F)
mcHFplus(100,10,3,0.6,T,F)
mcHFplus(200,10,3,0.6,T,F)
mcHFplus(50,10,2,0.2,F,F)
mcHFplus(75,10,2,0.2,F,F)
mcHFplus(100,10,2,0.2,F,F)
mcHFplus(200,10,2,0.2,F,F)
mcHFplus(50,10,2,0.6,F,F)
mcHFplus(75,10,2,0.6,F,F)
mcHFplus(100,10,2,0.6,F,F)
mcHFplus(200,10,2,0.6,F,F)
mcHFplus(50,10,3,0.2,F,F)
mcHFplus(75,10,3,0.2,F,F)
mcHFplus(100,10,3,0.2,F,F)
mcHFplus(200,10,3,0.2,F,F)
mcHFplus(50,10,3,0.6,F,F)
mcHFplus(75,10,3,0.6,F,F)
mcHFplus(100,10,3,0.6,F,F)
mcHFplus(200,10,3,0.6,F,F)
dir("../MCStudy_10000/Output/noCons/multiClub/",recursive = T)
noconsres <- dir("../MCStudy_10000/Output/noCons/multiClub/",recursive = T)
wiconsres <- dir("../MCStudy_10000/Output/withCons/multiClub/",recursive = T)
wiconsres
noconsres <- noconsres[grepl("HF",noconsres) & grepl("pois",noconsres)]
noconsres
wiconsres <- wiconsres[grepl("HF",wiconsres) & grepl("pois",wiconsres)]
wiconsres
dir.create("Output/trimmed")
noconsres <- dir("../MCStudy_10000/Output/noCons/multiClub/",recursive = T)
wiconsres <- dir("../MCStudy_10000/Output/withCons/multiClub/",recursive = T)
noconsres <- noconsres[grepl("reportHF",noconsres) & grepl("pois",noconsres)]
wiconsres <- wiconsres[grepl("reportHF",wiconsres) & grepl("pois",wiconsres)]
noconsres
noconsres <- lapply(noconsres, function(s) get(load(paste0("../MCStudy_10000/Output/noCons/multiClub/",s))))
noconsres
wiconsres <- lapply(wiconsres, function(s) get(load(paste0("../MCStudy_10000/Output/withCons/multiClub/",s))))
wiconsres
dim(wiconsres)
dim(wiconsres[[1]])
noconsres <- lapply(noconsres, function(r) r[3000,])
wiconsres <- lapply(wiconsres, function(r) r[3000,])
wiconsres
noconsres <- dir("../MCStudy_10000/Output/noCons/multiClub/",recursive = T)
wiconsres <- dir("../MCStudy_10000/Output/withCons/multiClub/",recursive = T)
noconsres <- noconsres[grepl("reportHF",noconsres) & grepl("pois",noconsres)]
wiconsres <- wiconsres[grepl("reportHF",wiconsres) & grepl("pois",wiconsres)]
noconsres <- lapply(noconsres, function(s) get(load(paste0("../MCStudy_10000/Output/noCons/multiClub/",s))))
wiconsres <- lapply(wiconsres, function(s) get(load(paste0("../MCStudy_10000/Output/withCons/multiClub/",s))))
noconsres <- lapply(noconsres, function(r) r[1:3000,])
wiconsres <- lapply(wiconsres, function(r) r[1:3000,])
noconsres
noconsdir <- dir("../MCStudy_10000/Output/noCons/multiClub/",recursive = T)
wiconsdir <- dir("../MCStudy_10000/Output/withCons/multiClub/",recursive = T)
noconsdir <- noconsdir[grepl("reportHF",noconsdir) & grepl("pois",noconsdir)]
wiconsdir <- wiconsdir[grepl("reportHF",wiconsdir) & grepl("pois",wiconsdir)]
noconsdir <- dir("../MCStudy_10000/Output/noCons/multiClub/",recursive = T)
wiconsdir <- dir("../MCStudy_10000/Output/withCons/multiClub/",recursive = T)
noconsdir <- noconsdir[grepl("reportHF",noconsdir) & grepl("pois",noconsdir)]
wiconsdir <- wiconsdir[grepl("reportHF",wiconsdir) & grepl("pois",wiconsdir)]
noconsres <- lapply(noconsdir, function(s) get(load(paste0("../MCStudy_10000/Output/noCons/multiClub/",s))))
wiconsres <- lapply(wiconsdir, function(s) get(load(paste0("../MCStudy_10000/Output/withCons/multiClub/",s))))
noconsres <- lapply(noconsres, function(r) r[1:3000,])
wiconsres <- lapply(wiconsres, function(r) r[1:3000,])
lapply(1:length(noconsdir), function(i) save(noconsres, file=paste0("Output/trimmed/",noconsdir[i])))
lapply(1:length(noconsdir), function(i) save(noconsres[i], file=paste0("Output/trimmed/",noconsdir[i])))
lapply(1:length(noconsdir), function(i) save(noconsres[[i]], file=paste0("Output/trimmed/",noconsdir[i])))
oconsres
noconsdir <- dir("../MCStudy_10000/Output/noCons/multiClub/",recursive = T)
wiconsdir <- dir("../MCStudy_10000/Output/withCons/multiClub/",recursive = T)
noconsdir <- noconsdir[grepl("reportHF",noconsdir) & grepl("pois",noconsdir)]
wiconsdir <- wiconsdir[grepl("reportHF",wiconsdir) & grepl("pois",wiconsdir)]
noconsres <- lapply(noconsdir, function(s) get(load(paste0("../MCStudy_10000/Output/noCons/multiClub/",s))))
wiconsres <- lapply(wiconsdir, function(s) get(load(paste0("../MCStudy_10000/Output/withCons/multiClub/",s))))
noconsres <- lapply(noconsres, function(r) r[1:3000,])
wiconsres <- lapply(wiconsres, function(r) r[1:3000,])
lapply(1:length(noconsdir), function(i) save(noconsres[[i]], file=paste0("Output/trimmed/",noconsdir[i])))
for(i in 1:length(noconsdir)){save(noconsres[[i]], file=paste0("Output/trimmed/",noconsdir[i])))}
for(i in 1:length(noconsdir)){save(noconsres[[i]], file=paste0("Output/trimmed/",noconsdir[i]))}
for(i in 1:length(noconsdir)){ res <-  noconsres[[i]]; save(res, file=paste0("Output/trimmed/",noconsdir[i]))}
i<-1
res <-  noconsres[[i]]
res
fname <- paste0("Output/trimmed/",noconsdir[i]))
fname <- paste0("Output/trimmed/",noconsdir[i])
fname
fdir  <- gsub("reportHF.*","",fname)
fdir
resdir <- dir("../MCStudy_10000/Output",recursive = T)
resdir
noconsdir <- noconsdir[grepl("multiClub",noconsdir) & grepl("reportHF",noconsdir) & grepl("pois",noconsdir)]
resdir <- noconsdir[grepl("multiClub",noconsdir) & grepl("reportHF",noconsdir) & grepl("pois",noconsdir)]
resdir
resdir <- resdir[grepl("multiClub",resdir) & grepl("reportHF",resdir) & grepl("pois",resdir)]
resdir
resdir <- dir("../MCStudy_10000/Output",recursive = T)
resdir
resdir <- resdir[grepl("multiClub",resdir)]
resdir
resdir <- dir("../MCStudy_10000/Output",recursive = T)
resdir <- resdir[grepl("multiClub.*report.*pois",resdir)]
resdir
gmmldir <- gmmldir[grepl("multiClub.*gmml.*pois",gmmldir)]
repdir <- dir("../MCStudy_10000/Output",recursive = T)
repdir <- repdir[grepl("multiClub.*report.*pois",repdir)]
gmmldir <- dir("../MCStudy_10000/Output",recursive = T)
gmmldir <- gmmldir[grepl("multiClub.*gmml.*pois",gmmldir)]
gmmldir
repdir <- dir("../MCStudy_10000/Output",recursive = T)
repdir <- repdir[grepl("multiClub.*reportHF.*pois",repdir)]
gmmldir <- dir("../MCStudy_10000/Output",recursive = T)
gmmldir <- gmmldir[grepl("multiClub.*gmmlHF.*pois",gmmldir)]
gmmldir
repdir
reps <- lapply(repdir, function(s) get(load(paste0("../MCStudy_10000/Output/",s))))
reps
gmmls <- lapply(gmmldir, function(s) get(load(paste0("../MCStudy_10000/Output/",s))))
reps <- lapply(reps, function(r) r[1:3000,])
gmmls[[1]]
dim(gmmls[[1]])
reps  <- lapply(reps, function(r) r[1:3000,])
gmmls <- lapply(gmmls, function(g) g[1:6000,])
res <-  reps[[i]]
res
repdir[i]
fname <- paste0("Output/trimmed/",repdir[i])
fname
fdir  <- gsub("reportHF.*","",fname)
fdir
dir.create(fdir,recursive = T)
for(i in 1:length(repdir)){ res <-  reps[[i]]
fname <- paste0("Output/trimmed/",repdir[i])
fdir  <- gsub("reportHF.*","",fname)
dir.create(fdir,recursive = T)
save(res, file=paste0("Output/trimmed/",fname))}
for(i in 1:length(repdir)){ res <-  reps[[i]]
fname <- paste0("Output/trimmed/",repdir[i])
fdir  <- gsub("reportHF.*","",fname)
dir.create(fdir,recursive = T)
save(res, file=paste0(fname))}
warnings()
setwd("~/ArtificialIntelligence/")
files <- dir("./")
files
len <- length(files)
len
seq(1,len,5)
int2 <- c((int1-1)[-1],len)
int1 <- seq(1,len,5)
int2 <- c((int1-1)[-1],len)
int2
rm(int1,int2)
int1 <- seq(1,len,5)
int2 <- c((int1-1)[-1],len)
intv <- cbind(int1,int2)
rm(int1,int2)
intv
intv
temploc <- dir.create("temp")
finloc  <- dir.create("finished")
temploc
file.rename(files[1],paste0("temp/",files[1]))
lapply(intv[1,1]:intv[1:2], function(j) file.rename(files[j],paste0("temp/",files[j])))
intv[1,1]:intv[1:2]
intv[1,1]
intv[1:2]
lapply(intv[1,1]:intv[1,2], function(j) file.rename(files[j],paste0("temp/",files[j])))
setwd("..")
q()
setwd("~/TwoStateMS/")
source("convDLV.R")
source("utils.R")
source("dlvPath.R")
q()
load("~/twostateMD_old/twostate/results/d_1930_res1.rda")
res1
head(res1)
res1[[1]]$par
res1[[2]]$par
res1[[4]]$par
res1[[3]]$par
res1[[4]]$par
setwd("~/ReplciationFiles/")
setwd("~/TwoStateMS/")
source("convDLV.R")
source("plotAll.R")
source("plotRejs.R")
res1930 <- get(load("../twostateMD/results/d_1930_resALL.rda"))
res1930 <- totable(res1930)
source("convDLV.R")
source("utils.R")
source("dlvPath.R")
res1930 <- res1930[,-8]
res1930 <- get(load("../twostateMD/results/d_1930_resALL.rda"))
res1930 <- totable(res1930)
res1930 <- res1930[,-8]
res1930
pathss_1930  <- lapply(1:nrow(res1930), function(x) {cat(x,"\n");dlvPath_dm(res1930[x,-(8:9)],pdats1930)})
pdat1930 <- gen_pdat(1930)
pdat1930
pathss_1930  <- lapply(1:nrow(res1930), function(x) {cat(x,"\n");dlvPath_dm(res1930[x,-(8:9)],pdat1930)})
# Reading outputs
ress_d   <- lapply(dir("output","_D_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
ress_dm  <- lapply(dir("output","_DM_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
# Converting to tables
ress_dm <- lapply(ress_dm, totable)
ress_dm
# Reformating results
# ress_d  <- lapply(ress_d, correctRes)
ress_d  <- lapply(ress_d, function(r) correctRes(r[,1:7]))
ress_dm <- lapply(ress_dm, correctRes)
ress_dm
ress_d
ress_dm  <- lapply(dir("output","_DM_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
# Converting to tables
ress_dm <- lapply(ress_dm, totable)
ress_dm
ress_dm <- lapply(ress_dm, function(r) r[,-7])
# Reformating results
# ress_d  <- lapply(ress_d, correctRes)
ress_d  <- lapply(ress_d, function(r) correctRes(r[,1:7]))
# Reading outputs
ress_d   <- lapply(dir("output","_D_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
ress_dm  <- lapply(dir("output","_DM_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
# Converting to tables
ress_dm <- lapply(ress_dm, totable)
ress_dm <- lapply(ress_dm, function(r) r[,-7])
# Reformating results
# ress_d  <- lapply(ress_d, correctRes)
ress_d  <- lapply(ress_d, function(r) correctRes(r[,1:7]))
ress_dm <- lapply(ress_dm, correctRes)
ress_dm
ress_d
# Reading outputs
ress_d   <- lapply(dir("output","_D_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
# Reformating results
# ress_d  <- lapply(ress_d, correctRes)
ress_d  <- lapply(ress_d, function(r) correctRes(r[,1:7]))
# Reshaping tables into similar forms
correctRes <- function(res){
# Reformats the table of estimates for it to be in "dH,dL,PHH,PLL, ..." order
if(ncol(res) == 7){
res[res[,1]>res[,2],] <- res[res[,1]>res[,2],c(2,1,4,3,5:ncol(res))]
} else {
res[res[,1]>res[,2],] <- res[res[,1]>res[,2],c(2,1,4,3,5,7,6,8)]}
return(res)
}
# Reformating results
# ress_d  <- lapply(ress_d, correctRes)
ress_d  <- lapply(ress_d, function(r) correctRes(r[,1:7]))
ress_dm <- lapply(ress_dm, correctRes)
ress_d
ress_dm
# data names and pair panels
dnames     <- gsub("d_|_D_resALL.rda","",dir("output","_D_.*resALL.rda"))
pdats      <- lapply(dnames, gen_pdat)
# State switching series for dm and d
pathss_DM   <- lapply(1:length(ress_dm), function(i) lapply(1:nrow(ress_dm[[i]]), function(x) {cat(x,"\n");dlvPath_dm(ress_dm[[i]][x,-8],pdats[[i]][,x])}))
dlvPath_dm
source('~/twostateMD/dlvPath.R')
res1930
pathss_1930  <- lapply(1:nrow(res1930), function(x) {cat(x,"\n");dlvPath(res1930[x,1:7],pdats[[1]])})
ress_dm[[1]]
res1930
head(res1930)
head(ress_dm[[1]])
pathss_1930  <- lapply(2:nrow(res1930), function(x) {cat(x,"\n");dlvPath(res1930[x,1:7],pdats[[1]])})
pathss_1930  <- lapply(2:nrow(res1930), function(x) {cat(x,"\n");dlvPath(ress_dm[x,1:7],pdats[[1]])})
pathss_1930  <- lapply(2:nrow(res1930), function(x) {cat(x,"\n");dlvPath(ress_dm[[1]][x,1:7],pdats[[1]])})
pdats[[1]]
# State switching series for dm and d
pathss_DM   <- lapply(1:length(ress_dm), function(i) lapply(1:nrow(ress_dm[[i]]), function(x) {cat(x,"\n");dlvPath_dm(ress_dm[[i]][x,-8],pdats[[i]][,x])}))
pathss_1930  <- lapply(2:nrow(res1930), function(x) {cat(x,"\n");dlvPath(ress_dm[[1]][x,1:7],pdats[[1]][,x])})
pathss_1930  <- lapply(1:nrow(res1930), function(x) {cat(x,"\n");dlvPath(res1930[x,1:7],pdats[[1]][,x])})
pathss_1930
ischange  <- t(sapply(pathss_1930, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,temp); return(temp)}))
ischange
res1930
pars1930  <- res1930[,-8] * ischange
pars1930
source('~/TwoStateMS/utils.R')
rep1930   <- report(pars1930)
rep1930
res1930  <- get(load("../twostateMD/results/d_1930_resALL.rda"))
res1930  <- totable(res1930)
res1930  <- res1930[,-8]
pdat1930 <- gen_pdat(1930)
pathss_1930  <- lapply(1:nrow(res1930), function(x) {cat(x,"\n");dlvPath_dm(res1930[x,1:7],pdats[[1]][,x])})
ischange  <- t(sapply(pathss_1930, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,temp); return(temp)}))
pars1930  <- res1930[,-8] * ischange
rep1930
rep1930   <- report(pars1930)
rep1930
res1930  <- get(load("../twostateMD/results/d_1930_resALL.rda"))
res1930  <- totable(res1930)
res1930  <- res1930[,-8]
pdat1930 <- gen_pdat(1930)
pathss_1930  <- lapply(1:nrow(res1930), function(x) {cat(x,"\n");dlvPath(res1930[x,1:7],pdats[[1]][,x])})
ischange  <- t(sapply(pathss_1930, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,temp); return(temp)}))
pars1930  <- res1930[,-8] * ischange
report(pars1930)
dlvPath
source('~/twostateMD/dlvPath.R')
res1930  <- get(load("../twostateMD/results/d_1930_resALL.rda"))
res1930  <- totable(res1930)
res1930  <- res1930[,-8]
pdat1930 <- gen_pdat(1930)
pathss_1930  <- lapply(1:nrow(res1930), function(x) {cat(x,"\n");dlvPath(res1930[x,1:7],pdats[[1]][,x])})
ischange  <- t(sapply(pathss_1930, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,temp); return(temp)}))
pars1930  <- res1930[,-8] * ischange
report(pars1930)
setwd("~/MSReplication/")
source("convDLV_d.R")
source("convDLV_dm.R")
source("plotAll.R")
source("plotRejs.R")
q()
# Reading outputs
ress_d   <- lapply(dir("output","_D_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
ress_d
# Reading outputs
ress_d   <- lapply(dir("output","_D_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
ress_d
# Reformating results
ress_d <- lapply(ress_d, function(r) correctRes(r[,1:7]))
if(Sys.info()["sysname"]=="Linux"){setwd("~/Documents/MSReplication/")} else {setwd("~/MSReplication/")}
source("convDLV_d.R")
source("utils.R")
source("dlvPath.R")
source("plotAll.R")
source("plotRejs.R")
source("lnviD2.R")
if(Sys.info()["sysname"]=="Linux")
{library("parallel");mclapply.hack <- mclapply} else {source("mclapplyhack.R")}
dir.create("output",showWarnings = F)
dir.create("results",showWarnings = F)
dir.create("rejplots",showWarnings = F)
dir.create("pairplots",showWarnings = F)
# Reformating results
ress_d <- lapply(ress_d, function(r) correctRes(r[,1:7]))
ress_d
# data names and pair panels
dnames     <- gsub("d_|_D_resALL.rda","",dir("output","_D_.*resALL.rda"))
dnames
pdats      <- lapply(dnames, gen_pdat)
ress_d
# State switching series for dm
pathss_D   <- lapply(1:length(ress_d), function(i) lapply(1:nrow(ress_d[[i]]), function(x) dlvPath_d(ress_d[[i]][x,-7],pdats[[i]][,x])))
# Correcting results
ischange  <- lapply(pathss_DM, function(paths) t(sapply(paths, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,temp); return(temp)})))
pathss_D
# Correcting results
ischange  <- lapply(pathss_D, function(paths) t(sapply(paths, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,T); return(temp)})))
parss_d   <- lapply(1:length(ress_d),  function(i)  ress_d[[i]][,-7] * ischange[[i]])
parss_d
# d estimations vs year for each pair
dss     <- lapply(1:length(ress_d), function(i) sapply(1:nrow(ress_d[[i]]), function(x) {matrix(ress_d[[i]][x,1:2],1,) %*% dlvPath_d(ress_d[[i]][x,1:6],pdats[[i]][,x])}))
dss
# proportions of d < 1 at each time point
d_plots     <- lapply(dss, function(ds) apply(ds<1,1,mean))
# Reading outputs
ress_d   <- lapply(dir("output","_D_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
# Reformating results
ress_d <- lapply(ress_d, function(r) correctRes(r[,1:7]))
ress_d
rm(parss_d)
rm(pathss_D)
rm(ischange)
# d estimations vs year for each pair
dss     <- lapply(1:length(ress_d), function(i) sapply(1:nrow(ress_d[[i]]), function(x) {matrix(ress_d[[i]][x,1:2],1,) %*% dlvPath_d(ress_d[[i]][x,1:6],pdats[[i]][,x])}))
# Plots of prop(d<1) for each dataset
for(i in 1:length(dnames)){
pdf(paste0("rejplots/d_lt_1_",dnames[i],"_D.pdf"))
plot((2010 - length(d_plots[[i]]) + 1):2010, d_plots[[i]],ylab="prop(d < 1)",xlab="year",main=dnames[i])
dev.off()
}
n1 <- "Finland"; n2 <- "Greece"; datname <- 1930
# n1 <- "Finland"; n2 <- "Greece"; datname <- 1930
plot_specific <- function(n1,n2,datname){
pairname <- paste0(n1," - ",n2)
datind   <- which(datname==dnames)
pnames   <- colnames(gen_pdat(datname))
serind   <- which(pairname == pnames)
ser      <- dss[[datind]][,serind]; maintext <- paste0(pnames[serind], " ", dnames[datind])
jpeg(paste0("pairplots/",dnames[datind],"_",pnames[serind],"_D.jpg"))
plot((2010 - length(ser)+ 1):2010, ser,type="l",xlab="year",ylab="d",main=maintext)
dev.off()
plot((2010 - length(ser)+ 1):2010, ser,type="l",xlab="year",ylab="d",main=maintext)
}
pairname <- paste0(n1," - ",n2)
datind   <- which(datname==dnames)
pnames   <- colnames(gen_pdat(datname))
serind   <- which(pairname == pnames)
ser      <- dss[[datind]][,serind]; maintext <- paste0(pnames[serind], " ", dnames[datind])
jpeg(paste0("pairplots/",dnames[datind],"_",pnames[serind],"_D.jpg"))
plot((2010 - length(ser)+ 1):2010, ser,type="l",xlab="year",ylab="d",main=maintext)
dev.off()
plot((2010 - length(ser)+ 1):2010, ser,type="l",xlab="year",ylab="d",main=maintext)
# Plots of prop(d<1) for each dataset
for(i in 1:length(dnames)){
jpeg(paste0("rejplots/d_lt_1_",dnames[i],"_D.jpg"))
plot((2010 - length(d_plots[[i]]) + 1):2010, d_plots[[i]],ylab="prop(d < 1)",xlab="year",main=dnames[i])
dev.off()
}
# Europe Case
plot_specific("Finland","Greece",1930)
plot_specific("France","Sweden",1930)
plot_specific("Germany","Italy",1930)
plot_specific("Germany","Netherlands",1930)
# Developed Case
plot_specific("Belgium","Netherlands",1930)
plot_specific("Sweden","USA",1930)
plot_specific("Netherlands","UK",1930)
plot_specific("Canada","USA",1930)
# Developing Case
plot_specific("Chile","Morocco",1950)
plot_specific("Ecuador","Guatemala",1930)
plot_specific("Peru","Philippines",1950)
plot_specific("Peru","South.Africa",1950)
setwd("output/temp/")
dir()
gsub("_res","_DM_res",dir())
lapply(dir(), function(n) file.rename(n,gsub("_res","_DM_res",n))
)
setwd("..ü")
setwd("..")
if(Sys.info()["sysname"]=="Linux"){setwd("~/Documents/MSReplication/")} else {setwd("~/MSReplication/")}
source("convDLV_d.R")
source("utils.R")
source("dlvPath.R")
source("plotAll.R")
source("plotRejs.R")
source("lnviD2.R")
source("plots_d.R")
if(Sys.info()["sysname"]=="Linux"){setwd("~/Documents/MSReplication/")} else {setwd("~/MSReplication/")}
source("convDLV_d.R")
source("convDLV_dm!!!!.R") # remove it !!!!
source("utils.R")
source("dlvPath.R")
source("lnviD2.R")
if(Sys.info()["sysname"]=="Linux")
{library("parallel");mclapply.hack <- mclapply} else {source("mclapplyhack.R")}
dir.create("output",showWarnings = F)
dir.create("results",showWarnings = F)
dir.create("rejplots",showWarnings = F)
dir.create("pairplots",showWarnings = F)
# Reading outputs
ress_d   <- lapply(dir("output","_D_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
ress_dm  <- lapply(dir("output","_DM_.*resALL.rda"), function(d) get(load(paste0("output/",d))))
# Converting to tables
ress_dm <- lapply(ress_dm, totable)
ress_dm
ress_dm <- lapply(ress_dm, function(r) r[,-8])
ress_dm
# Reformating results
ress_d  <- lapply(ress_d, function(r) correctRes(r[,1:7]))
ress_dm <- lapply(ress_dm, correctRes)
ress_dm
ress_d
ress_dm
# data names and pair panels
dnames     <- gsub("d_|_D_resALL.rda","",dir("output","_D_.*resALL.rda"))
dnames
pdats      <- lapply(dnames, gen_pdat)
pdats      <- lapply(dnames, gen_pdat)
# State switching series for dm and d
pathss_DM   <- lapply(1:length(ress_dm), function(i) lapply(1:nrow(ress_dm[[i]]), function(x) dlvPath_dm(ress_dm[[i]][x,-8],pdats[[i]][,x])))
pathss_D    <- lapply(1:length(ress_d), function(i) lapply(1:nrow(ress_d[[i]]), function(x) dlvPath_d(ress_d[[i]][x,-7],pdats[[i]][,x])))
# Correcting results
ischange  <- lapply(pathss_DM, function(paths) t(sapply(paths, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,temp); return(temp)})))
parss_dm  <- lapply(1:length(ress_dm),  function(i)  ress_dm[[i]][,-8] * ischange[[i]])
ischange  <- lapply(pathss_D, function(paths) t(sapply(paths, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,T); return(temp)})))
parss_d   <- lapply(1:length(ress_d),  function(i)  ress_d[[i]][,-7] * ischange[[i]])
# Correcting results (Reformatting results of pairs do not change state)
ischange  <- lapply(pathss_DM, function(paths) t(sapply(paths, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,temp); return(temp)})))
parss_dm  <- lapply(1:length(ress_dm),  function(i)  ress_dm[[i]][,-8] * ischange[[i]])
ischange  <- lapply(pathss_D, function(paths) t(sapply(paths, function(p) {temp <- apply(p,1,sum) > 0; temp <- c(temp,temp,T,T); return(temp)})))
parss_d   <- lapply(1:length(ress_d),  function(i)  ress_d[[i]][,-7] * ischange[[i]])
# Reporting outputs
rep_dm <- do.call(rbind,lapply(parss_dm,report))
rep_dm <- data.frame(c(sapply(dnames, function(n) rep(n,5))),rownames(rep_dm),rep_dm)
rep_d  <- do.call(rbind,lapply(parss_d,report))
rep_d  <- data.frame(c(sapply(dnames, function(n) rep(n,5))),rownames(rep_d),rep_d)
colnames(rep_dm)  <- c("Data","Conv?",colnames(rep_dm)[-(1:2)])
colnames(rep_d)   <- c("Data","Conv?",colnames(rep_d)[-(1:2)])
# Writing reports
write.csv(rep_dm, "results/report_dm.csv")
write.csv(rep_d , "results/report_d.csv")
